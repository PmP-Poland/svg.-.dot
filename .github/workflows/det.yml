// 2.89.1 - 2025-05-05T06:32:22.608Z
https://github.com/PmP-Poland/svg.-.dot/blob/d71d00306421f8c8860bc7a89da53344623dbc51/readme.md
!function(){function finallyConstructor(callback){var constructor=this.constructor;return this.then((function(value){return constructor.resolve(callback()).then((function(){return value}))}),(function(reason){return constructor.resolve(callback()).then((function(){return constructor.reject(reason)}))}))}function allSettled(arr){var P=this;return new P((function(resolve,reject){if(!arr||void 0===arr.length)return reject(new TypeError(typeof arr+" "+arr+" is not iterable(cannot read property Symbol(Symbol.iterator))"));var args=Array.prototype.slice.call(arr);if(0===args.length)return resolve([]);var remaining=args.length;function res(i,val){if(val&&("object"==typeof val||"function"==typeof val)){var then=val.then;if("function"==typeof then)return void then.call(val,(function(val){res(i,val)}),(function(e){args[i]={status:"rejected",reason:e},0==--remaining&&resolve(args)}))}args[i]={status:"fulfilled",value:val},0==--remaining&&resolve(args)}for(var i=0;i<args.length;i++)res(i,args[i])}))}var setTimeoutFunc=setTimeout;function isArray(x){return Boolean(x&&void 0!==x.length)}function noop(){}function bind(fn,thisArg){return function(){fn.apply(thisArg,arguments)}}function Promise$2(fn){if(!(this instanceof Promise$2))throw new TypeError("Promises must be constructed via new");if("function"!=typeof fn)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],doResolve(fn,this)}function handle(self,deferred){for(;3===self._state;)self=self._value;0!==self._state?(self._handled=!0,Promise$2._immediateFn((function(){var cb=1===self._state?deferred.onFulfilled:deferred.onRejected;if(null!==cb){var ret;try{ret=cb(self._value)}catch(e){return void reject(deferred.promise,e)}resolve(deferred.promise,ret)}else(1===self._state?resolve:reject)(deferred.promise,self._value)}))):self._deferreds.push(deferred)}function resolve(self,newValue){try{if(newValue===self)throw new TypeError("A promise cannot be resolved with itself.");if(newValue&&("object"==typeof newValue||"function"==typeof newValue)){var then=newValue.then;if(newValue instanceof Promise$2)return self._state=3,self._value=newValue,void finale(self);if("function"==typeof then)return void doResolve(bind(then,newValue),self)}self._state=1,self._value=newValue,finale(self)}catch(e){reject(self,e)}}function reject(self,newValue){self._state=2,self._value=newValue,finale(self)}function finale(self){2===self._state&&0===self._deferreds.length&&Promise$2._immediateFn((function(){self._handled||Promise$2._unhandledRejectionFn(self._value)}));for(var i=0,len=self._deferreds.length;i<len;i++)handle(self,self._deferreds[i]);self._deferreds=null}function Handler(onFulfilled,onRejected,promise){this.onFulfilled="function"==typeof onFulfilled?onFulfilled:null,this.onRejected="function"==typeof onRejected?onRejected:null,this.promise=promise}function doResolve(fn,self){var done=!1;try{fn((function(value){done||(done=!0,resolve(self,value))}),(function(reason){done||(done=!0,reject(self,reason))}))}catch(ex){if(done)return;done=!0,reject(self,ex)}}function initializeMutationHandlerFallback(window,cookieConsent,document){var testdoc=document.implementation.createHTMLDocument("");testdoc.documentElement.innerHTML="<html><head><script><\/script></head><body></body></html>",document.replaceChild(document.importNode(testdoc.documentElement,!0),document.documentElement),cookieConsent.mutationFallback=!0,"function"==typeof window.stop&&window.stop(),mutationHandlerFallback(cookieConsent,document,null)}function mutationHandlerFallback(cookieConsent,document,charset){var xhr=new XMLHttpRequest,content="";xhr.onreadystatechange=function(){xhr.readyState===XMLHttpRequest.DONE&&(content=xhr.responseText,mutationHandlerFallbackInit(window,cookieConsent,document,content))},xhr.open("GET",document.URL,!0),charset&&xhr.overrideMimeType("text/html; charset="+charset),xhr.send(null)}function mutationHandlerFallbackInit(window,cookieConsent,document,content){if(cookieConsent.configuration.loaded||cookieConsent.configuration.loadRetry>30){if(cookieConsent.configuration.loaded=!0,cookieConsent.configuration.loadRetry=0,!cookieConsent.mutationHandlerFallbackCharsetLoaded){cookieConsent.mutationHandlerFallbackCharsetLoaded=!0;var regexCharset=/<meta.*?charset=["'].*charset=([^"']+)["'][^>]*>/g,matchCharset=regexCharset.exec(content);if(matchCharset||(regexCharset=/<meta charset=["']([^"']+)["'][^>]*>/g,matchCharset=regexCharset.exec(content)),matchCharset&&matchCharset.length>1){var currentCharset=matchCharset[1];if("utf-8"!==currentCharset.toLowerCase())return void mutationHandlerFallback(cookieConsent,document,matchCharset[1])}}var doc=document.implementation.createHTMLDocument(""+(document.title||""));document.replaceChild(document.importNode(doc.documentElement,!0),document.documentElement),document.documentElement.innerHTML=content;for(var i=0;i<cookieConsent.mutationFallbackDocAttributes.length;i++)document.documentElement.setAttribute(cookieConsent.mutationFallbackDocAttributes[i].name,cookieConsent.mutationFallbackDocAttributes[i].value);var regex=/<\s*body[^>]*>/g,match=regex.exec(content);if(match&&match.length>0&&"<body>"!==match[0])try{var testdoc=document.implementation.createHTMLDocument("");testdoc.documentElement.innerHTML="<html><head><script><\/script></head>"+match[0]+"</body></html>";for(var j=0;j<testdoc.body.attributes.length;j++)try{document.body.setAttribute(testdoc.body.attributes[j].name,testdoc.body.attributes[j].value)}catch(e){}}catch(e){}var baseTags=document.getElementsByTagName("base");if(baseTags.length>0&&navigator.userAgent.match(/IEMobile|Trident/i)){var all=document.getElementsByTagName("*");[].forEach.call(all,(function(node){if("LINK"===node.tagName&&(node.cookiebotTagHash=window.CookieConsent.tagHash(node)),node.hasAttribute("src"))node.src=node.src?cookieConsent.resolveURL(node.src):"";else if(node.hasAttribute("href")&&(node.href=node.href?cookieConsent.resolveURL(node.href):"","LINK"===node.tagName&&node.hasAttribute("rel"))){var linkClone=node.cloneNode(!0);linkClone.cookiebotTagHash=node.cookiebotTagHash;var cloneParentNode=node.parentNode;cloneParentNode&&cloneParentNode.insertBefore(linkClone,node),cloneParentNode&&cloneParentNode.removeChild(node)}}))}var scripts=document.getElementsByTagName("script");[].forEach.call(scripts,(function(node){if(cookieConsent.isCookiebotCoreNode(node)||node.hasAttribute("data-cookieconsent"))node.hasAttribute("data-cookieconsent")&&"ignore"===node.getAttribute("data-cookieconsent")&&(node.removeAttribute("data-cookieconsent"),cookieConsent.fallbackScriptNodes.push(node));else{var tagCategories="",tagURL="",hasSrc=!1;node.hasAttribute("src")&&(tagURL=node.getAttribute("src")||"",hasSrc=!0),node.cookiebotTagHash=window.CookieConsent.tagHash(node),tagCategories=cookieConsent.getTagCookieCategories(node.outerHTML,tagURL,node,!0),hasSrc&&""!==tagCategories&&tagURL.toLocaleLowerCase().indexOf("jquery")>=0&&(tagCategories=""),""!==tagCategories&&(null!=node.type&&void 0!==node.type&&""!==node.type&&"text/plain"!==node.type&&(node.origScriptType=node.type),node.type="text/plain",node.setAttribute("data-cookieconsent",tagCategories)),node.hasAttribute("defer")?cookieConsent.fallbackDeferNodes.push(node):cookieConsent.fallbackScriptNodes.push(node)}})),loadFallbackScriptNodes(window,cookieConsent,document,cookieConsent.fallbackScriptNodes),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"video"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"audio"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"picture"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"source"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"iframe"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"img"),mutationHandlerFallbackMarkupTag(window,cookieConsent,document,"embed"),cookieConsent.mutationFallback=!1,cookieConsent.dialog&&cookieConsent.dialog.visible&&cookieConsent.show(!1),(cookieConsent.consented||cookieConsent.declined)&&cookieConsent.triggerOnloadEvents()}else setTimeout((function(){mutationHandlerFallbackInit(window,cookieConsent,document,content)}),100)}function mutationHandlerFallbackMarkupTag(window,cookieConsent,doc,nodeType){var elements=doc.getElementsByTagName(nodeType);[].forEach.call(elements,(function(node){if(node.hasAttribute("data-cookieconsent")||cookieConsent.isCookiebotNode(node))node.hasAttribute("data-cookieconsent")&&"ignore"===node.getAttribute("data-cookieconsent")&&node.removeAttribute("data-cookieconsent");else if("IMG"!==node.tagName||!node.hasAttribute("src")||cookieConsent.getHostnameFromURL(node.src||"")!==window.location.hostname){var tagCategories="",tagURL="";if(node.hasAttribute("src")&&(tagURL=node.getAttribute("src")||""),node.cookiebotTagHash=window.CookieConsent.tagHash(node),tagCategories=cookieConsent.getTagCookieCategories(node.outerHTML,tagURL,node,!0),""!==tagCategories&&(node.setAttribute("data-cookieconsent",tagCategories),node.hasAttribute("src"))){var src=node.getAttribute("src")||"";node.origOuterHTML=node.outerHTML,node.setAttribute("data-cookieblock-src",src),node.removeAttribute("src")}}}))}function loadFallbackScriptNodes(window,cookieConsent,document,mutationNodes){if(cookieConsent.startJQueryHold(),mutationNodes.length>0){var node=mutationNodes.shift();if(!node||null!=node.type&&void 0!==node.type&&""!==node.type&&"text/javascript"!==node.type&&"application/javascript"!==node.type&&"module"!==node.type&&"text/plain"!==node.type)loadFallbackScriptNodes(window,cookieConsent,document,mutationNodes);else{var tagParent=node.parentNode,tagClone_1=cookieConsent.cloneScriptTag(node);cookieConsent.cloneEventListeners(node,tagClone_1),tagClone_1.consentProcessed="1";var hasSrc=!1;node.hasAttribute("src")&&(hasSrc=!0);var fireTagOnLoad=hasSrc&&!tagClone_1.hasAttribute("data-cookieconsent")&&!tagClone_1.hasAttribute("nomodule");fireTagOnLoad&&(tagClone_1.onload=function(){tagClone_1.isloaded=!0,loadFallbackScriptNodes(window,cookieConsent,document,mutationNodes),cookieConsent.startJQueryHold()},tagClone_1.onerror=function(){tagClone_1.isloaded=!0,loadFallbackScriptNodes(window,cookieConsent,document,mutationNodes),cookieConsent.startJQueryHold()}),tagClone_1.hasAttribute("data-cookieconsent")&&"ignore"!==tagClone_1.getAttribute("data-cookieconsent")&&(tagClone_1.type="text/plain"),tagParent=node.parentNode,null!=tagParent&&(tagParent.insertBefore(tagClone_1,node),tagParent.removeChild(node)),fireTagOnLoad||loadFallbackScriptNodes(window,cookieConsent,document,mutationNodes)}}else cookieConsent.fallbackDeferNodes.length>0?loadFallbackScriptNodes(window,cookieConsent,document,cookieConsent.fallbackDeferNodes):(cookieConsent.runScripts(),setTimeout((function(){if(cookieConsent.stopOverrideEventListeners(),cookieConsent.endJQueryHold(),"undefined"!=typeof EventTarget){var evt=document.createEvent("Event");evt.initEvent("readystatechange",!0,!0),document.dispatchEvent(evt),evt=document.createEvent("Event"),evt.initEvent("DOMContentLoaded",!0,!0),document.dispatchEvent(evt),evt=document.createEvent("Event"),evt.initEvent("load",!0,!0),window.dispatchEvent(evt),evt=document.createEvent("Event"),evt.initEvent("onload",!0,!0),window.dispatchEvent(evt)}}),500))}Promise$2.prototype.catch=function(onRejected){return this.then(null,onRejected)},Promise$2.prototype.then=function(onFulfilled,onRejected){var prom=new this.constructor(noop);return handle(this,new Handler(onFulfilled,onRejected,prom)),prom},Promise$2.prototype.finally=finallyConstructor,Promise$2.all=function(arr){return new Promise$2((function(resolve,reject){if(!isArray(arr))return reject(new TypeError("Promise.all accepts an array"));var args=Array.prototype.slice.call(arr);if(0===args.length)return resolve([]);var remaining=args.length;function res(i,val){try{if(val&&("object"==typeof val||"function"==typeof val)){var then=val.then;if("function"==typeof then)return void then.call(val,(function(val){res(i,val)}),reject)}args[i]=val,0==--remaining&&resolve(args)}catch(ex){reject(ex)}}for(var i=0;i<args.length;i++)res(i,args[i])}))},Promise$2.allSettled=allSettled,Promise$2.resolve=function(value){return value&&"object"==typeof value&&value.constructor===Promise$2?value:new Promise$2((function(resolve){resolve(value)}))},Promise$2.reject=function(value){return new Promise$2((function(resolve,reject){reject(value)}))},Promise$2.race=function(arr){return new Promise$2((function(resolve,reject){if(!isArray(arr))return reject(new TypeError("Promise.race accepts an array"));for(var i=0,len=arr.length;i<len;i++)Promise$2.resolve(arr[i]).then(resolve,reject)}))},Promise$2._immediateFn="function"==typeof setImmediate&&function(fn){setImmediate(fn)}||function(fn){setTimeoutFunc(fn,0)},Promise$2._unhandledRejectionFn=function _unhandledRejectionFn(err){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",err)};var CATEGORY_PREFERENCES="preferences",CATEGORY_STATISTICS="statistics",CATEGORY_MARKETING="marketing";function cookieCategoriesFromNumberArray(catNumberArray){for(var categoryString="",i=0;i<catNumberArray.length;i++)switch(""!==categoryString&&(categoryString+=","),Number(catNumberArray[i])){case 2:categoryString+="preferences";break;case 3:categoryString+="statistics";break;case 4:""!==categoryString&&-1!==categoryString.indexOf("marketing")||(categoryString+="marketing")}return""!==categoryString&&","===categoryString.slice(-1)&&(categoryString=categoryString.substring(0,categoryString.length-1)),categoryString}var __assign=function(){return __assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i],s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},fetchJsonData=function(url,onSuccess,onError){var xmlhttp=new XMLHttpRequest;xmlhttp.onreadystatechange=function(){if(4===this.readyState&&this.status>=200&&this.status<=299){if(204===this.status)return void onSuccess({});try{var json=JSON.parse(this.responseText);onSuccess(json)}catch(e){onError&&onError({status:this.status,message:"JSON.parse error: "+e.message})}}else 4===this.readyState&&onError&&onError({status:this.status,message:this.responseText})},xmlhttp.onerror=function(){onError&&onError({status:-1,message:"onerror"})},xmlhttp.open("GET",url,!0),xmlhttp.send()};function isCookiebotNode(cookieConsent,node){var hasMatch=!1;if(node.hasAttribute("src")){var url=node.getAttribute("src").toLowerCase();0!==url.indexOf(cookieConsent.host)&&0!==url.indexOf(cookieConsent.CDN)||(hasMatch=!0)}return hasMatch}var resolveURL=function(url){if(""!==url){var a=document.createElementOrig("a");return a.href=url,a.cloneNode(!1).href}return url},hashCode=function(s){if(void 0===s)return"";var ss=s.replace(/\r\n|\n|\r|\t|\s/g,""),h=0,l=ss.length,i=0;if(l>0)for(;i<l;)h=(h<<5)-h+ss.charCodeAt(i++)|0;return h},getHostnameFromURL=function(url){try{var a=document.createElementOrig("a");return a.href=url,a.cloneNode(!1).hostname}catch(e){return""}},resolvedPromise=function(PromiseConstructor){return new PromiseConstructor((function(resolve,_){resolve()}))},createTimeoutPromise=function(PromiseConstructor,timeoutMs){return new PromiseConstructor((function(resolve){setTimeout(resolve,timeoutMs)}))},getTruncatedString=function(value,length){return value.length>length?value.substring(0,length-3)+"...":value},CATEGORY_ID_PREFERENCES=2,CATEGORY_ID_STATISTICS=3,CATEGORY_ID_MARKETING=4;function cookiesNumberCategoriesFromStringArray(categoryStrings){for(var categoryNumberArray=[],i=0;i<categoryStrings.length;i++){var categoryString=categoryStrings[i];switch(categoryString){case"preferences":categoryNumberArray.push(2);break;case"statistics":categoryNumberArray.push(3);break;case"marketing":categoryNumberArray.push(4)}}return categoryNumberArray}function getCookieListFromObject(cookieObject){return[cookieObject.CookieName,"","","","",cookieObject.CookieStorageType.toString(),cookieObject.CookieNameRegex||""]}function onSuccess(cookieConsent,shouldFetchCookies){var logConsentJsonUrl=cookieConsent.host+cookieConsent.serial+"/"+cookieConsent.domain+"/cookies.json";shouldFetchCookies?fetchJsonData(logConsentJsonUrl,(function(data){var advertisingCookiesList=data.AdvertisingCookies.map((function(cookie){return getCookieListFromObject(cookie)})),preferenceCookiesList=data.PreferenceCookies.map((function(cookie){return getCookieListFromObject(cookie)})),statisticsCookiesList=data.StatisticCookies.map((function(cookie){return getCookieListFromObject(cookie)})),unclassifiedCookiesList=data.UnclassifiedCookies.map((function(cookie){return getCookieListFromObject(cookie)}));cookieConsent.cookieList=__assign(__assign({},cookieConsent.cookieList),{cookieTableAdvertising:advertisingCookiesList,cookieTablePreference:preferenceCookiesList,cookieTableStatistics:statisticsCookiesList,cookieTableUnclassified:unclassifiedCookiesList}),cookieConsent.init(),cookieConsent.resetCookies()})):(cookieConsent.init(),cookieConsent.resetCookies())}function logConsent(cookieConsent,consentURL,asyncLoad,shouldFetchCookies){var truncatedLogConsentUrl=getTruncatedString(consentURL,4096);window.CookieConsent.getScript(truncatedLogConsentUrl,asyncLoad,(function(){onSuccess(cookieConsent,shouldFetchCookies)}))}var hasFramework=function(cookieConsent){return cookieConsent.hasFramework&&!cookieConsent.frameworkBlocked&&"tcfv2.2"===cookieConsent.framework.toLowerCase()},createBannerQueryParameters=function(cookieConsent,ucScriptElement){return{serial:cookieConsent.getURLParam("cbid")||ucScriptElement.getAttribute("data-cbid")||void 0,mode:cookieConsent.getURLParam("mode")||ucScriptElement.getAttribute("data-mode")||void 0,culture:cookieConsent.getURLParam("culture")||ucScriptElement.getAttribute("data-culture")||void 0,type:cookieConsent.getURLParam("type")||ucScriptElement.getAttribute("data-type")||void 0,level:cookieConsent.getURLParam("level")||ucScriptElement.getAttribute("data-level")||void 0,domainPath:cookieConsent.getURLParam("path")||ucScriptElement.getAttribute("data-path")||void 0,userCountry:cookieConsent.getURLParam("user_country")||ucScriptElement.getAttribute("data-user-country")||void 0}},createBanner=function(cookieConsent,isRenewal){var ucScriptElement=document.getElementById(cookieConsent.scriptId)||cookieConsent.scriptElement;if(!ucScriptElement)return console.warn("Error: Can't read data values from the cookie script tag - make sure to set script attribute ID."),resolvedPromise(cookieConsent.Promise);var parameters=createBannerQueryParameters(cookieConsent,ucScriptElement);if(!parameters.serial)return console.warn("Error: Cookie script tag attribute 'data-cbid' is missing."),resolvedPromise(cookieConsent.Promise);if(!cookieConsent.isGUID(parameters.serial))return console.warn("Error: Cookie script tag ID %s is not a valid key.",parameters.serial),resolvedPromise(cookieConsent.Promise);var serial=parameters.serial,mode=parameters.mode,culture=parameters.culture,type=parameters.type,level=parameters.level,domainPath=parameters.domainPath,userCountry=parameters.userCountry;if(cookieConsent.serial=serial,!cookieConsent.cookieEnabled)return cookieConsent.consented=!1,cookieConsent.declined=!0,cookieConsent.hasResponse=!0,cookieConsent.consent.preferences=!1,cookieConsent.consent.statistics=!1,cookieConsent.consent.marketing=!1,cookieConsent.consentID="-3",cookieConsent.consent.stamp="-3",resolvedPromise(cookieConsent.Promise);var querystrings=["renew="+(isRenewal?"true":"false"),"referer="+encodeURIComponent(window.location.hostname),"dnt="+(cookieConsent.doNotTrack?"true":"false"),"init=false"];return isRenewal&&querystrings.push("nocache="+(new Date).getTime()),mode&&querystrings.push("mode="+mode),culture&&querystrings.push("culture="+culture),type&&querystrings.push("type="+type),level&&querystrings.push("level="+level),domainPath&&querystrings.push
#094539951720725093146138034630835928970437121556056615018618514542164125652346076575273914256207048299647535782902432746862233486219504193278262668622334873798398722066038113
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#
# Scans are triggered:
# 1. On every push to default and protected branches
# 2. On every Pull Request targeting the default branch
# 3. On a weekly schedule
# 4. Manually, on demand, via the "workflow_dispatch" event
#
# The workflow should work with no modifications, but you might like to use a
# later version of the Detekt CLI by modifying the $DETEKT_RELEASE_TAG
# environment variable.
name: Scan with Detekt

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
     - cron: '28 14 * * 2'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Release tag associated with version of Detekt to be installed
  # SARIF support (required for this workflow) was introduced in Detekt v1.15.0
  DETEKT_RELEASE_TAG: v1.15.0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scan"
  scan:
    name: Scan
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    # Gets the download URL associated with the $DETEKT_RELEASE_TAG
    - name: Get Detekt download URL
      id: detekt_info
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh api graphql --field tagName=$DETEKT_RELEASE_TAG --raw-field query='
          query getReleaseAssetDownloadUrl($tagName: String!) {
            repository(name: "detekt", owner: "detekt") {
              release(tagName: $tagName) {
                releaseAssets(name: "detekt", first: 1) {
                  nodes {
                    downloadUrl
                  }
                }
                tagCommit {
                  oid
                }
              }
            }
          }
        ' 1> gh_response.json

        DETEKT_RELEASE_SHA=$(jq --raw-output '.data.repository.release.releaseAssets.tagCommit.oid' gh_response.json)
        if [ $DETEKT_RELEASE_SHA != "37f0a1d006977512f1f216506cd695039607c3e5" ]; then
          echo "Release tag doesn't match expected commit SHA"
          exit 1
        fi

        DETEKT_DOWNLOAD_URL=$(jq --raw-output '.data.repository.release.releaseAssets.nodes[0].downloadUrl' gh_response.json)
        echo "download_url=$DETEKT_DOWNLOAD_URL" >> $GITHUB_OUTPUT

    # Sets up the detekt cli
    - name: Setup Detekt
      run: |
        dest=$( mktemp -d )
        curl --request GET \
          --url ${{ steps.detekt_info.outputs.download_url }} \
          --silent \
          --location \
          --output $dest/detekt
        chmod a+x $dest/detekt
        echo $dest >> $GITHUB_PATH

    # Performs static analysis using Detekt
    - name: Run Detekt
      continue-on-error: true
      run: |
        detekt --input ${{ github.workspace }} --report sarif:${{ github.workspace }}/detekt.sarif.json

    # Modifies the SARIF output produced by Detekt so that absolute URIs are relative
    # This is so we can easily map results onto their source files
    # This can be removed once relative URI support lands in Detekt: https://git.io/JLBbA
    - name: Make artifact location URIs relative
      continue-on-error: true
      run: |
        echo "$(
          jq \
            --arg github_workspace ${{ github.workspace }} \
            '. | ( .runs[].results[].locations[].physicalLocation.artifactLocation.uri |= if test($github_workspace) then .[($github_workspace | length | . + 1):] else . end )' \
            ${{ github.workspace }}/detekt.sarif.json
        )" > ${{ github.workspace }}/detekt.sarif.json

    # Uploads results to GitHub repository using the upload-sarif action
    - uses: github/codeql-action/upload-sarif@v3
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: ${{ github.workspace }}/detekt.sarif.json
        checkout_path: ${{ github.workspace }}
